<%- include('partials/_header', { title: 'Lecture Viewer' }) %>

    <div class="container">
        <div class="text-start mb-3">
            <%- include('partials/_breadcrumb', { course: course }) %>
            <div class="d-flex align-items-center justify-content-between">
                <div class="d-flex gap-1">
                  <form action="/lectures/<%= lecture.id %>" method="get">
                      <input type="hidden" name="course_id" value="<%= course.id %>">
                      <button id="videoBtn" type="submit" class="btn btn-sm btn-secondary">Video</button>
                  </form>
                  <button id="readingBtn" class="btn btn-sm btn-primary active" <%= !lecture.is_viewed ? 'disabled' : '' %>>Reading</button>
                  <form action="/lectures/<%= lecture.id %>/quizz" method="get">
                      <input type="hidden" name="course_id" value="<%= course.id %>">
                      <button id="quizzBtn" type="submit" class="btn btn-sm btn-secondary" <%= !lecture.is_viewed || !lecture.is_readed ? 'disabled' : '' %>>Quizz</button>
                  </form>
                </div>
                
                  <div style="width: 100px;">
                    <div class="d-flex justify-content-between">
                      <span id="readingStatus" style="font-size: 10px;"><%= lecture.is_readed ? '✔️ Completed' : '❌ Not Completed'%></span>
                      <span id="readingProgress" style="font-size: 10px;">0%</span>
                    </div>
                    <div class="progress mb-0" style="height: 5px;">
                      <div id="lectureProgressBar" class="progress-bar" role="progressbar" style="width: 0%;"></div>
                    </div>
                  </div>
            </div>
        </div>

        <!-- Reading Content -->
        <div id="readingContent" class="row g-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title">Lecture Details</h3>
                        <div class="lecture-description">
                            <% if(lecture.description){ %>
                                <%- lecture.description %>
                            <% } else { %>
                                <p>No detailed description available for this lecture.</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script type="application/json" id="lecture-data">
        <%- JSON.stringify(lecture) %>
    </script>
    <script type="application/json" id="user-data">
        <%- JSON.stringify(user) %>
    </script>
    <script type="application/json" id="course-data">
        <%- JSON.stringify(course) %>
    </script>

    <script src="/js/lecture_viewer.js"></script>
    
    <script>
    let lecture = JSON.parse(document.getElementById("lecture-data").textContent);
    let user = JSON.parse(document.getElementById("user-data").textContent);
    
    const readingStatus = document.getElementById('readingStatus');
    const readingProgress = document.getElementById('readingProgress');
    const progressBar = document.getElementById('lectureProgressBar');
    const quizzBtn = document.getElementById('quizzBtn');
    const readingContent = document.getElementById('readingContent');
    
    let hasMarkedAsRead = false;

    function getScrollProgress() {
        const docEl = document.documentElement;
        const docBody = document.body;
        const scrollTop = docEl.scrollTop || docBody.scrollTop;
        const scrollHeight = docEl.scrollHeight || docBody.scrollHeight;
        const clientHeight = docEl.clientHeight;

        // If content fits in viewport without scrolling, consider it 100% read
        if (scrollHeight <= clientHeight + 1) { // Adding 1px buffer for rounding issues
            return 100;
        }
        
        const progress = (scrollTop / (scrollHeight - clientHeight)) * 100;
        return Math.min(progress, 100); // Cap at 100%
    }

    function updateProgressBar() {
        const progress = getScrollProgress();
        progressBar.style.width = `${progress}%`;
        readingProgress.textContent = `${Math.round(progress)}%`;
        
        // Mark as read when:
        // 1. Scrolled to bottom (or near bottom) AND
        // 2. Not already marked as read AND
        // 3. Lecture isn't already marked as read
        if (progress >= 95 && !hasMarkedAsRead && !lecture.is_readed) {
            markLectureContentAsRead();
            hasMarkedAsRead = true;
        }
    }

    function markLectureContentAsRead() {
        fetch(`/lectures/${lecture.id}/mark-readed`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ user_id: user.id })
        })
        .then(res => {
            if (res.ok) {
                readingStatus.textContent = "✔️ Completed";
                quizzBtn.disabled = false;
                lecture.is_readed = true;
            } else {
                console.error("[❌] Failed to mark lecture.");
            }
        })
        .catch(err => {
            console.error("[❌] Error marking lecture:", err);
        });
    }

    // Initialize on load
    document.addEventListener('DOMContentLoaded', () => {
        // If already read, set progress to 100%
        if (lecture.is_readed) {
            progressBar.style.width = '100%';
            readingProgress.textContent = '100%';
            hasMarkedAsRead = true;
            return;
        }
        
        // Wait for the next frame to ensure all elements are rendered
        requestAnimationFrame(() => {
            const initialProgress = getScrollProgress();
            progressBar.style.width = `${initialProgress}%`;
            readingProgress.textContent = `${Math.round(initialProgress)}%`;
            
            // If content fits in viewport (or is very close), mark as read immediately
            if (initialProgress === 100) {
                markLectureContentAsRead();
                hasMarkedAsRead = true;
            } else {
                // Only add scroll listener if content is scrollable
                window.addEventListener('scroll', updateProgressBar);
            }
        });
    });
</script>

<%- include('partials/_footer') %>